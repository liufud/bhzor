<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:security="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="
    http://www.springframework.org/schema/security 
    http://www.springframework.org/schema/security/spring-security-4.2.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
   
    <http pattern="/login" security="none"/>
    <http pattern="/register" security="none"/>
        
   
   <http use-expressions="true">
     <!--  <intercept-url pattern="/login*" access="isAnonymous()" /> -->
      	<intercept-url pattern="/login*" access="isAnonymous()" />
      	<intercept-url pattern="/home" access="isAuthenticated()"/>
      	<intercept-url pattern="/customer" access="isAuthenticated()"/>
      	<intercept-url pattern="/vendor" access="isAuthenticated()"/>
      	<intercept-url pattern="/products" access="isAuthenticated()"/>
     	 <intercept-url pattern="/" access="isAuthenticated()"/>
     	 <intercept-url pattern="/**" access="isAuthenticated()"/>
      	<form-login
         login-page='/login'
         login-processing-url="/perform_login"
         username-parameter="username"
         password-parameter="password"
         default-target-url="/home"
         authentication-failure-url="/login.html?error=true"
         always-use-default-target="true"/>
         <!-- authentication-failure-handler-ref="authenticationFailureHandler" --> 
 
   	  	<logout 
   	  		logout-url="/perform_logout"  
   	  		logout-success-url="/login" 
   	  		delete-cookies="JSESSIONID"/>
		<csrf disabled="true"/>
   </http>
    
    <beans:bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
    	<beans:property name="cacheSeconds" value="0"/>
    </beans:bean>
    
	<beans:bean id="securityDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://localhost:3306/bhzorinventory" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="0326" />
		<!-- <beans:property name="url" value="jdbc:mysql://bhzorinventory.crnhc996pmes.us-east-2.rds.amazonaws.com:3306/bhzorinventory" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="12345678" /> -->
	</beans:bean>
<!-- 	
    <authentication-manager>
      <authentication-provider>
         <user-service>
            <user name="customer" password="pass" authorities="ROLE_CUSTOMER" />
            <user name="manager" password="pass" authorities="ROLE_MANAGER" />
         </user-service>
      </authentication-provider>
   
    -->

	<context:component-scan base-package="ics"/>
	
	
	<beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
	    <beans:property name="userDetailsService" ref="userDetailsService" ></beans:property>    
	</beans:bean>
	
	<beans:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
		<beans:constructor-arg> 
			<beans:list> 
				<beans:ref bean="daoAuthenticationProvider" /> 
			</beans:list> 
		</beans:constructor-arg> 
	</beans:bean>
	
	
	<authentication-manager>
	<!-- userDetailsService only does lookup on the existing users in the database
		I kept it here just for learning purposes -->
	     <authentication-provider user-service-ref="userDetailsService"/>
	        <!-- <password-encoder hash="md5"></password-encoder> -->
<!--  	    <authentication-provider> 
	        <jdbc-user-service data-source-ref="securityDataSource"/>
	    </authentication-provider> -->
	    <authentication-provider>
            <user-service>
                <user name="Jacky" password="pass" authorities="Manager"/>
                <user name="test" password="test" authorities="Customer"/>
            </user-service>
        </authentication-provider>
	</authentication-manager>
	
	<beans:bean id="authenticationFailureHandler"
    class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
    <beans:property name="exceptionMappings">
        <beans:props>
            <beans:prop key="org.springframework.security.authentication.BadCredentialsException">/login/badCredentials</beans:prop>
            <beans:prop key="org.springframework.security.authentication.CredentialsExpiredException">/login/credentialsExpired</beans:prop>
            <beans:prop key="org.springframework.security.authentication.LockedException">/login/accountLocked</beans:prop>
            <beans:prop key="org.springframework.security.authentication.DisabledException">/login/accountDisabled</beans:prop>
        </beans:props>
    </beans:property>
	</beans:bean>

</beans:beans>